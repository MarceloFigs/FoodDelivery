// <auto-generated />
using FoodDelivery.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace FoodDelivery.Migrations
{
    [DbContext(typeof(FoodDeliveryDbContext))]
    [Migration("20230206225741_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.32")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("FoodDelivery.Models.MenuItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("MenuItemCategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("MenuItemCategoryId");

                    b.ToTable("MenuItem");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            MenuItemCategoryId = 1,
                            Name = "Coca Cola",
                            Price = 599m
                        },
                        new
                        {
                            Id = 2,
                            MenuItemCategoryId = 1,
                            Name = "Suco de limão",
                            Price = 399m
                        },
                        new
                        {
                            Id = 3,
                            MenuItemCategoryId = 2,
                            Name = "Big Burguer",
                            Price = 3999m
                        },
                        new
                        {
                            Id = 4,
                            MenuItemCategoryId = 2,
                            Name = "Chicken Burguer",
                            Price = 3599m
                        });
                });

            modelBuilder.Entity("FoodDelivery.Models.MenuItemCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("MenuItemCategory");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Drinks"
                        },
                        new
                        {
                            Id = 2,
                            Name = "MainDish"
                        });
                });

            modelBuilder.Entity("FoodDelivery.Models.MenuItem", b =>
                {
                    b.HasOne("FoodDelivery.Models.MenuItemCategory", "MenuItemCategory")
                        .WithMany("MenuItem")
                        .HasForeignKey("MenuItemCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
